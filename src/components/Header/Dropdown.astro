---
import DropdownItem from "./DropdownItem.astro";

interface dropdownItemsProps {
  href: string;
  name: string;
}
interface Props {
  dropdownItems?: dropdownItemsProps[];
  url: string;
  name: string;
  title: string;
}

let { dropdownItems, name} = Astro.props;
---

<div
  class="hs-dropdown [--strategy:static] sm:[--strategy:fixed] [--adaptive:none]"
>
  <button
    id="hs-navbar-example-dropdown"
    type="button"
    class="hs-dropdown-toggle flex items-center rounded-lg text-base font-medium text-gray-500 outline-none ring-zinc-500 hover:text-[#015699] focus-visible:ring md:py-3"
    aria-haspopup="menu"
    aria-expanded="false"
    aria-label="Mega Menu"
  >
    {name}
    <svg
      class="hs-dropdown-open:-rotate-180 sm:hs-dropdown-open:rotate-0 duration-300 ms-1 shrink-0 size-4"
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"><path d="m6 9 6 6 6-6"></path></svg
    >
  </button>

  <div
    class="hs-dropdown-menu transition-[opacity,margin] ease-in-out duration-[150ms] hs-dropdown-open:opacity-100 opacity-0 sm:w-48 z-10 bg-white sm:shadow-md rounded-lg p-1 space-y-1 dark:bg-neutral-800 sm:dark:border dark:border-neutral-700 dark:divide-neutral-700 before:absolute top-full sm:border before:-top-5 before:start-0 before:w-full before:h-5 hidden"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="hs-navbar-example-dropdown"
  >
    {
      dropdownItems?.map((item) => {
        return <DropdownItem {...item} />;
      })
    }
  </div>
</div>
